# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
pr: none

pool:
  vmImage: windows-latest

stages:
  - stage: terraform_validate
    displayName: terraform validate and innit
    jobs:
      - job:
        continueOnError: false 
        steps:
        - task: TerraformInstaller@2
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'
        - task: TerraformCLI@2
          displayName: Terraform init
          inputs:
              command: 'init'
              commandOptions: '-var-file="dev/main.tfvars"'
              backendType: 'azurerm'
              backendServiceArm: 'Pay-As-You-Go(3ed8bd5f-d033-4d8c-9264-88905230a957)'
              ensureBackend: true
              backendAzureRmResourceGroupName: 'rg-emu-eastus-1'
              backendAzureRmResourceGroupLocation: 'eastus'
              backendAzureRmStorageAccountName: 'emusaccountdemo1'
              backendAzureRmStorageAccountSku: 'Standard_LRS'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'dev-tfstate'
              allowTelemetryCollection: false
        - task: TerraformCLI@2
          inputs:
            command: 'validate'
            allowTelemetryCollection: false
  
  - stage: terraform_plan
    dependsOn: terraform_validate
    condition: succeeded('terraform_validate')
    displayName: Terraform Plan
    jobs:
      - job:
        steps:
        - task: TerraformInstaller@2
          displayName: Install Terraform
          inputs:
            terraformVersion: 'latest'
        - task: TerraformCLI@2
          displayName: Terraform init
          inputs:
            command: 'init'
            commandOptions: '-var-file="dev/main.tfvars"' 
            backendType: 'azurerm'
            backendServiceArm: 'Pay-As-You-Go(3ed8bd5f-d033-4d8c-9264-88905230a957)'
            ensureBackend: true
            backendAzureRmResourceGroupName: 'rg-emu-eastus-1'
            backendAzureRmResourceGroupLocation: 'eastus'
            backendAzureRmStorageAccountName: 'emusaccountdemo1'
            backendAzureRmStorageAccountSku: 'Standard_LRS'
            backendAzureRmContainerName: 'tfstate'
            backendAzureRmKey: 'dev-tfstate'
            allowTelemetryCollection: false
                 
        - task: TerraformCLI@2
          displayName: Terraform plan
          inputs:
            command: 'plan'
            allowTelemetryCollection: false
            commandOptions: '-var-file="dev/main.tfvars"'
            
  - stage: terraform_apply
    condition: succeeded('terraform_plan')
    dependsOn: terraform_plan
    displayName: Terraform Apply
    jobs:
    - job:
      steps:     
      - task: TerraformInstaller@2
        displayName: Install Terraform
        inputs:
          terraformVersion: 'latest'
      - task: TerraformCLI@2
        displayName: Terraform init
        inputs:
          command: 'init'
          commandOptions: '-var-file="dev/main.tfvars"'   
          backendType: 'azurerm'
          backendServiceArm: 'Pay-As-You-Go(3ed8bd5f-d033-4d8c-9264-88905230a957)'
          ensureBackend: true
          backendAzureRmResourceGroupName: 'rg-emu-eastus-1'
          backendAzureRmResourceGroupLocation: 'eastus'
          backendAzureRmStorageAccountName: 'emusaccountdemo1'
          backendAzureRmStorageAccountSku: 'Standard_LRS'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'dev-tfstate'
          allowTelemetryCollection: false
          
      - task: TerraformCLI@2
        displayName: Terraform apply
        inputs:
          command: 'apply'
          commandOptions: '-var-file="dev/main.tfvars"'
          allowTelemetryCollection: false
                   